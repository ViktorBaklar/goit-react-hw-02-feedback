{"version":3,"sources":["components/buttonControl/buttonControl.module.css","components/UI/Section/Section.module.css","components/statistics/statistics.module.css","components/UI/container/index.jsx","components/UI/button/index.jsx","components/buttonControl/index.jsx","components/UI/Section/index.jsx","components/statistics/index.jsx","components/notification/index.jsx","App.js","index.js","components/UI/container/container.module.css","components/UI/button/Button.module.css"],"names":["module","exports","Container","children","className","style","container","Button","type","onClick","classList","button","join","ButtonControl","feedbackRange","onLeaveFeedback","buttonWrap","map","range","id","uniqueId","Section","title","section","Statistics","good","neutral","bad","total","positive","statistics","Notification","message","App","state","addFeedback","setState","prevState","countFeedback","positivePercentage","Math","round","this","totalFeedback","positiveFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,WAAa,oC,mBCA/BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,WAAa,iC,sNCGhBC,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAWC,IAAMC,UAAtB,SAAkCH,K,gBCmBvDI,EAnBA,SAAC,GAKT,IAJLH,EAII,EAJJA,UACAD,EAGI,EAHJA,SAGI,IAFJK,YAEI,MAFG,SAEH,EADJC,EACI,EADJA,QAEMC,EAAY,CAACL,IAAMM,OAAQP,GAAWQ,KAAK,KAEjD,OACE,wBACER,UAAWM,EACXF,KAAMA,EACNC,QAASA,EAHX,SAKGN,K,kCCDQU,EAXO,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,gBAAlB,OACpB,oBAAKX,UAAWC,IAAMW,WAAtB,SAEIF,EAAcG,KAAI,SAAAC,GAChB,IAAIC,EAAKC,IAAS,WAClB,OAAO,6BAAa,cAAC,EAAD,CAAQX,QAAS,kBAAMM,EAAgBG,IAAvC,SAAiDA,KAArDC,S,iBCATE,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOnB,EAAV,EAAUA,SAAV,OACd,sBAAKC,UAAWC,IAAMkB,QAAtB,UACE,6BAAKD,IACJnB,M,iBCQUqB,EAXI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,SAA9B,OACjB,qBAAIzB,UAAWC,IAAMyB,WAArB,UACE,wCAAWL,EAAX,OACA,2CAAcC,EAAd,OACA,uCAAUC,EAAV,OACA,yCAAYC,EAAZ,OACA,qDAAwBC,EAAxB,WCIWE,G,MATM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,4BAAIA,MCqESC,E,4MA/DbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,YAAc,SAAAjB,GACZ,EAAKkB,UAAS,SAAAC,GAAS,sBAAQnB,EAAQmB,EAAUnB,GAAS,O,EAE5DoB,cAAgB,WACd,MAA+B,EAAKJ,MACpC,OADA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBY,mBAAqB,WACnB,MAA+B,EAAKL,MAA5BT,EAAR,EAAQA,KACFI,EAAWJ,GAAQA,EADzB,EAAcC,QAAd,EAAuBC,KAEvB,OAAOE,GAAYW,KAAKC,MAAiB,IAAXZ,I,4CAGhC,WACE,MAA+Ba,KAAKR,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBgB,EAAgBD,KAAKJ,gBACrBM,EAAmBF,KAAKH,qBAC9B,OACE,qBAAKnC,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASkB,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,cAAe,CAAC,OAAQ,UAAW,OACnCC,gBAAiB2B,KAAKP,gBAI1B,cAAC,EAAD,CAASb,MAAM,aAAf,SACGqB,EAAgB,EAAK,cAAC,EAAD,CACpBlB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,EACPd,SAAUe,IACL,cAAC,EAAD,CAAcZ,QAAQ,iC,GA1CvBa,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BlD,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.0a692e36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrap\":\"buttonControl_buttonWrap__2Phtf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2IedB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__2d04F\"};","import style from './container.module.css'\r\n\r\nconst Container = ({ children }) => <div className={style.container}>{children}</div>;\r\n\r\nexport default Container;","import style from './Button.module.css';\r\n\r\nconst Button = ({\r\n  className,\r\n  children,\r\n  type = 'button',\r\n  onClick,\r\n}) => {\r\n  const classList = [style.button, className].join(' ');\r\n\r\n  return (\r\n    <button\r\n      className={classList}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import Button from '../UI/button'\r\nimport style from './buttonControl.module.css'\r\nimport uniqueId from 'lodash/uniqueId';\r\n\r\nconst ButtonControl = ({ feedbackRange, onLeaveFeedback }) => (\r\n  < ul className={style.buttonWrap} >\r\n    {\r\n      feedbackRange.map(range => {\r\n        let id = uniqueId(\"prefix-\")\r\n        return <li key={id}><Button onClick={() => onLeaveFeedback(range)} >{range}</Button></li>\r\n\r\n      })\r\n    }\r\n  </ul >\r\n)\r\nexport default ButtonControl","import style from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={style.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n)\r\n\r\nexport default Section;","import style from './statistics.module.css'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positive }) => (\r\n  <ul className={style.statistics} >\r\n    <li>Good: {good} </li>\r\n    <li>Neutral: {neutral} </li>\r\n    <li>Bad: {bad} </li>\r\n    <li>Total: {total} </li>\r\n    <li>Positive feedback: {positive}%</li>\r\n  </ul >\r\n)\r\n\r\n\r\nexport default Statistics;","import './notification.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p>{message}</p>\r\n)\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string\r\n}\r\n\r\n\r\nexport default Notification;","import { Component } from 'react';\nimport './App.css';\nimport Container from './components/UI/container'\nimport ButtonControl from './components/buttonControl'\nimport Section from './components/UI/Section'\nimport Statistics from './components/statistics'\nimport Notification from './components/notification'\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = range => {\n    this.setState(prevState => ({ [range]: prevState[range] + 1 }));\n  };\n  countFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positivePercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const positive = good / (good + neutral + bad);\n    return positive && Math.round(positive * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countFeedback();\n    const positiveFeedback = this.positivePercentage();\n    return (\n      <div className=\"App\" >\n        <Container>\n          <Section title=\"Please leave feedback\">\n            <ButtonControl\n              feedbackRange={['good', 'neutral', 'bad']}\n              onLeaveFeedback={this.addFeedback}\n            />\n\n          </Section>\n          <Section title=\"Statistics\">\n            {totalFeedback > 0 ? (<Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positive={positiveFeedback}\n            />) : (<Notification message=\"No feedback given\"></Notification>)\n            }\n          </Section>\n        </Container>\n      </div>\n    );\n  }\n}\n\n// const App = () => {\n//   return <div className=\"App\" >\n//     <Container>\n//       <Section title=\"Please leave feedback\">\n//         <ButtonWrap></ButtonWrap>\n//       </Section>\n//       <Section title=\"Statistics\"></Section>\n\n//     </Container>\n//   </div>\n// }\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__Pl4H0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1PRTS\"};"],"sourceRoot":""}